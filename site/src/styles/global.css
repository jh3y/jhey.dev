/* @import "normalize.css"; */
@import 'tailwindcss';

@theme {
  --color-bg: light-dark(#fff, #000);
  --header-height: 80px;
  --spacing-content: 600px;
  --content: 56ch;
  --spacing-max-content: calc(100vw - (2 * var(--spacing-gutter)));
  --spacing-gutter: 1.5rem;
  --font-size-min: 14;
  --font-size-max: 20;
  --font-ratio-min: 1.2;
  --font-ratio-max: 1.33;
  --font-width-min: 375;
  --font-width-max: 1500;
  --breakpoint-lg: 968px;
  --color-canvas: canvas;
  --animate-marquee: marquee 8s linear infinite;
}

@keyframes marquee {
  to {
    translate: -50% 0;
  }
}

@keyframes reveal {
  0% {
    filter: blur(var(--blur-from, 4px));
    scale: var(--scale-from, 1);
    opacity: var(--opacity-from, 0);
    translate: var(--translate-from-x, 0) var(--translate-from-y, 0);
  }
  100% {
    filter: blur(var(--blur-to, 0px));
    scale: var(--scale-to, 1);
    opacity: var(--opacity-to, 1);
    translate: var(--translate-to-x, 0) var(--translate-to-y, 0);
  }
}

:where(a, button):focus-visible {
  outline: 2px solid var(--color-red-400);
  outline-offset: 2px;
}

::selection {
  background: var(--color-red-400);
  color: #fff;
}

html {
  color-scheme: light dark;
  scrollbar-color: light-dark(var(--color-red-400), var(--color-red-500)) #0000;
  scrollbar-width: thin;
}

[data-theme='light'] {
  color-scheme: light only;
}

[data-theme='dark'] {
  color-scheme: dark only;
}

.text-fluid {
  --fluid-min: calc(
    var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
  );
  --fluid-max: calc(
    var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
  );
  --fluid-preferred: calc(
    (var(--fluid-max) - var(--fluid-min)) /
      (var(--font-width-max) - var(--font-width-min))
  );
  --fluid-type: clamp(
    (var(--fluid-min) / 16) * 1rem,
    ((var(--fluid-min) / 16) * 1rem) -
      (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
      (var(--fluid-preferred) * var(--variable-unit, 100vi)),
    (var(--fluid-max) / 16) * 1rem
  );
  font-size: var(--fluid-type);
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

body {
  background: var(--color-bg);
  color: light-dark(color-mix(in hsl, canvasText, canvas 40%), color-mix(in hsl, canvasText, canvas 4%));
  display: flex;
  flex-direction: column;
  font-family: var(--font-sans);
  font-weight: 300;
  min-height: 100vh;
}

body::before {
  --size: 40px;
  --line: light-dark(color-mix(in hsl, canvasText, #0000 90%), color-mix(in hsl, canvasText, #0000 80%));
  content: '';
  height: 100dvh;
  width: 100vw;
  position: fixed;
  background:
    linear-gradient(90deg, var(--line) 1px, transparent 1px var(--size))
      calc(var(--size) * 0.36) 50% / var(--size) var(--size),
    linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0%
      calc(var(--size) * 0.32) / var(--size) var(--size);
  mask: linear-gradient(125deg, transparent 60%, white);
  top: 0;
  transform-style: flat;
  pointer-events: none;
  z-index: -1;
}

@layer signature {
  .sig {
    rotate: 12deg;
    

    .eye {
      transform-box: fill-box;
      transform-origin: 50% 50%;
    }

    :is(.eye, .nose) {
      fill: currentColor;
    }
  }
  @media (prefers-reduced-motion: no-preference) {
    @keyframes fill {
      to {
        fill: currentColor;
      }
    }
    @keyframes draw {
      to {
        stroke-dashoffset: 0;
      }
    }

    @keyframes blink {
      0%,
      46%,
      48%,
      50%,
      100% {
        transform: scaleY(1);
      }
      47%,
      49% {
        transform: scaleY(0.1);
      }
    }
    .sig {
      --duration: 0.6;
      --delay: 0.2;
      --base-delay: calc((var(--duration) + var(--delay)));
      --base-delay: 0.75;
      --natty-delay: 0.973125;

      path {
        --end: 1.025;
        stroke-dasharray: var(--end);
        stroke-dashoffset: var(--end);
        animation: draw calc(var(--path-speed) * 1s)
          calc((var(--base-delay) * 1s) + var(--path-delay, 0) * 1s) ease-in
          forwards;
      }
      :is(.eye, .nose) {
        fill: hsl(0 0% 0% / 0);
        animation:
          draw calc(var(--path-speed) * 1s)
            calc((var(--base-delay) * 1s) + var(--path-delay, 0) * 1s) ease-in
            forwards,
          fill 0.5s calc((var(--base-delay) * 1s) + var(--natty-delay, 0) * 1s)
            forwards;
      }
      .eye {
        animation:
          draw calc(var(--path-speed) * 1s)
            calc((var(--base-delay) * 1s) + var(--path-delay, 0) * 1s) ease-in
            forwards,
          fill 0.5s calc((var(--base-delay) * 1s) + var(--natty-delay, 0) * 1s)
            forwards,
          blink 6s calc((var(--base-delay) * 1s) + var(--natty-delay, 0) * 1s)
            infinite;
      }
    }
  }
}
